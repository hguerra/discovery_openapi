// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Redocly Museum API
 *
 * An imaginary, but delightful Museum API for interacting with museum services and information. Built with love by Redocly.
 *
 * API version: 1.0.0
 * Contact: team@redocly.com
 */

package api




// BuyMuseumTicketsResponse - Details for a museum ticket after a successful purchase.
type BuyMuseumTicketsResponse struct {

	// Confirmation message after a ticket purchase.
	Message string `json:"message"`

	// Name of the special event
	EventName string `json:"eventName,omitempty"`

	// Unique identifier for museum ticket. Generated when purchased.
	TicketId string `json:"ticketId"`

	TicketType TicketType `json:"ticketType"`

	TicketDate string `json:"ticketDate"`

	// Unique confirmation code used to verify ticket purchase.
	ConfirmationCode string `json:"confirmationCode"`
}

// AssertBuyMuseumTicketsResponseRequired checks if the required fields are not zero-ed
func AssertBuyMuseumTicketsResponseRequired(obj BuyMuseumTicketsResponse) error {
	elements := map[string]interface{}{
		"message": obj.Message,
		"ticketId": obj.TicketId,
		"ticketType": obj.TicketType,
		"ticketDate": obj.TicketDate,
		"confirmationCode": obj.ConfirmationCode,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertBuyMuseumTicketsResponseConstraints checks if the values respects the defined constraints
func AssertBuyMuseumTicketsResponseConstraints(obj BuyMuseumTicketsResponse) error {
	return nil
}
